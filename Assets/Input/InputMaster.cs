//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Input/InputMaster.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputMaster : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputMaster()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputMaster"",
    ""maps"": [
        {
            ""name"": ""Eye"",
            ""id"": ""2607b44d-6809-43c9-9faf-4c58dec8819b"",
            ""actions"": [
                {
                    ""name"": ""FaceButton_Down"",
                    ""type"": ""Button"",
                    ""id"": ""492a70d7-d509-4077-9b92-521c09c3ced8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FaceButton_Up"",
                    ""type"": ""Button"",
                    ""id"": ""4d094d4b-561f-46fc-98f1-bbb593f8f554"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FaceButton_Left"",
                    ""type"": ""Button"",
                    ""id"": ""6d342fe3-65d9-4c2b-92de-905a57cf613a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FaceButton_Right"",
                    ""type"": ""Button"",
                    ""id"": ""ab9255c7-60c8-4b01-b383-b96a40a289e1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Trigger_Left"",
                    ""type"": ""Value"",
                    ""id"": ""ba76a4a7-1887-4bd8-a686-715fe767a491"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Trigger_Right"",
                    ""type"": ""Value"",
                    ""id"": ""ee61fb02-ee62-4494-916f-9543d9d53b30"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Shoulder_Left"",
                    ""type"": ""Value"",
                    ""id"": ""fa3c4ea9-661c-42d2-98e6-4abc1dd46137"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Shoulder_Right"",
                    ""type"": ""Value"",
                    ""id"": ""3198a317-7a22-4dba-b19f-e3a05f0f551c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Dpad_Right"",
                    ""type"": ""Button"",
                    ""id"": ""7894cf37-d3eb-492d-8721-555458044f42"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dpad_Left"",
                    ""type"": ""Button"",
                    ""id"": ""ea991d08-9385-42fc-bb0a-53d863f138ad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dpad_Up"",
                    ""type"": ""Button"",
                    ""id"": ""3309d7c9-5de4-49a5-a62e-cc73a63c6b3a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dpad_Down"",
                    ""type"": ""Button"",
                    ""id"": ""c69deb6b-aa74-4996-8158-c03949f9798f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftStick_X"",
                    ""type"": ""Value"",
                    ""id"": ""ef20258c-6188-4db5-a83b-870643eecddf"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LeftStick_Y"",
                    ""type"": ""Value"",
                    ""id"": ""b3e8b609-72e4-46b6-a105-48a776663c13"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightStick_X"",
                    ""type"": ""Value"",
                    ""id"": ""54385103-cb40-43f7-a22b-984278b7be55"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RightStick_Y"",
                    ""type"": ""Value"",
                    ""id"": ""74176a68-7f24-42c0-94b0-631a38f8707f"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4f096f5b-66b1-40b7-9602-d57986fba597"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""FaceButton_Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""052d22a0-19fc-4997-a2b1-58c459ebb8ec"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""FaceButton_Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4d834edb-b926-49c5-87fe-ff82c42cba51"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""FaceButton_Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b060b931-f1c0-4fb7-9c82-9846720b9365"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""FaceButton_Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""89e4adad-13dd-404d-bdc2-02e58ee14ccb"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""FaceButton_Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""95d25fe8-9c43-4f0c-9df0-c4a448094b7f"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Trigger_Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""91ad0187-aa74-4f42-a2a4-5de330faa617"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Trigger_Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""94f2f2b3-91ad-438a-8488-0dcb8a781a9f"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Shoulder_Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc9bf56b-7c33-43e6-95ac-02d0fba41e7f"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Shoulder_Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d05fd620-ca17-4eca-8404-268890142f3c"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Dpad_Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aec73b64-0956-4de9-8b76-987949b451af"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Dpad_Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d6600b22-a82c-4376-aec7-14f1b9e23457"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Dpad_Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""436f27b1-2e58-4cef-98ed-a358706b74a0"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Dpad_Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bf32a625-2a4a-40ac-b56e-6d0c67b59706"",
                    ""path"": ""<Gamepad>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LeftStick_X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d3038c1-92f7-427d-ada2-b6b45861c262"",
                    ""path"": ""<Gamepad>/leftStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""LeftStick_Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""78653a10-e4d2-4000-93ef-789d26d97789"",
                    ""path"": ""<Gamepad>/rightStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RightStick_Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e466cf47-1598-4c75-a2cf-e4fab18d902a"",
                    ""path"": ""<Gamepad>/rightStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""RightStick_X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": []
        }
    ]
}");
        // Eye
        m_Eye = asset.FindActionMap("Eye", throwIfNotFound: true);
        m_Eye_FaceButton_Down = m_Eye.FindAction("FaceButton_Down", throwIfNotFound: true);
        m_Eye_FaceButton_Up = m_Eye.FindAction("FaceButton_Up", throwIfNotFound: true);
        m_Eye_FaceButton_Left = m_Eye.FindAction("FaceButton_Left", throwIfNotFound: true);
        m_Eye_FaceButton_Right = m_Eye.FindAction("FaceButton_Right", throwIfNotFound: true);
        m_Eye_Trigger_Left = m_Eye.FindAction("Trigger_Left", throwIfNotFound: true);
        m_Eye_Trigger_Right = m_Eye.FindAction("Trigger_Right", throwIfNotFound: true);
        m_Eye_Shoulder_Left = m_Eye.FindAction("Shoulder_Left", throwIfNotFound: true);
        m_Eye_Shoulder_Right = m_Eye.FindAction("Shoulder_Right", throwIfNotFound: true);
        m_Eye_Dpad_Right = m_Eye.FindAction("Dpad_Right", throwIfNotFound: true);
        m_Eye_Dpad_Left = m_Eye.FindAction("Dpad_Left", throwIfNotFound: true);
        m_Eye_Dpad_Up = m_Eye.FindAction("Dpad_Up", throwIfNotFound: true);
        m_Eye_Dpad_Down = m_Eye.FindAction("Dpad_Down", throwIfNotFound: true);
        m_Eye_LeftStick_X = m_Eye.FindAction("LeftStick_X", throwIfNotFound: true);
        m_Eye_LeftStick_Y = m_Eye.FindAction("LeftStick_Y", throwIfNotFound: true);
        m_Eye_RightStick_X = m_Eye.FindAction("RightStick_X", throwIfNotFound: true);
        m_Eye_RightStick_Y = m_Eye.FindAction("RightStick_Y", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Eye
    private readonly InputActionMap m_Eye;
    private IEyeActions m_EyeActionsCallbackInterface;
    private readonly InputAction m_Eye_FaceButton_Down;
    private readonly InputAction m_Eye_FaceButton_Up;
    private readonly InputAction m_Eye_FaceButton_Left;
    private readonly InputAction m_Eye_FaceButton_Right;
    private readonly InputAction m_Eye_Trigger_Left;
    private readonly InputAction m_Eye_Trigger_Right;
    private readonly InputAction m_Eye_Shoulder_Left;
    private readonly InputAction m_Eye_Shoulder_Right;
    private readonly InputAction m_Eye_Dpad_Right;
    private readonly InputAction m_Eye_Dpad_Left;
    private readonly InputAction m_Eye_Dpad_Up;
    private readonly InputAction m_Eye_Dpad_Down;
    private readonly InputAction m_Eye_LeftStick_X;
    private readonly InputAction m_Eye_LeftStick_Y;
    private readonly InputAction m_Eye_RightStick_X;
    private readonly InputAction m_Eye_RightStick_Y;
    public struct EyeActions
    {
        private @InputMaster m_Wrapper;
        public EyeActions(@InputMaster wrapper) { m_Wrapper = wrapper; }
        public InputAction @FaceButton_Down => m_Wrapper.m_Eye_FaceButton_Down;
        public InputAction @FaceButton_Up => m_Wrapper.m_Eye_FaceButton_Up;
        public InputAction @FaceButton_Left => m_Wrapper.m_Eye_FaceButton_Left;
        public InputAction @FaceButton_Right => m_Wrapper.m_Eye_FaceButton_Right;
        public InputAction @Trigger_Left => m_Wrapper.m_Eye_Trigger_Left;
        public InputAction @Trigger_Right => m_Wrapper.m_Eye_Trigger_Right;
        public InputAction @Shoulder_Left => m_Wrapper.m_Eye_Shoulder_Left;
        public InputAction @Shoulder_Right => m_Wrapper.m_Eye_Shoulder_Right;
        public InputAction @Dpad_Right => m_Wrapper.m_Eye_Dpad_Right;
        public InputAction @Dpad_Left => m_Wrapper.m_Eye_Dpad_Left;
        public InputAction @Dpad_Up => m_Wrapper.m_Eye_Dpad_Up;
        public InputAction @Dpad_Down => m_Wrapper.m_Eye_Dpad_Down;
        public InputAction @LeftStick_X => m_Wrapper.m_Eye_LeftStick_X;
        public InputAction @LeftStick_Y => m_Wrapper.m_Eye_LeftStick_Y;
        public InputAction @RightStick_X => m_Wrapper.m_Eye_RightStick_X;
        public InputAction @RightStick_Y => m_Wrapper.m_Eye_RightStick_Y;
        public InputActionMap Get() { return m_Wrapper.m_Eye; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(EyeActions set) { return set.Get(); }
        public void SetCallbacks(IEyeActions instance)
        {
            if (m_Wrapper.m_EyeActionsCallbackInterface != null)
            {
                @FaceButton_Down.started -= m_Wrapper.m_EyeActionsCallbackInterface.OnFaceButton_Down;
                @FaceButton_Down.performed -= m_Wrapper.m_EyeActionsCallbackInterface.OnFaceButton_Down;
                @FaceButton_Down.canceled -= m_Wrapper.m_EyeActionsCallbackInterface.OnFaceButton_Down;
                @FaceButton_Up.started -= m_Wrapper.m_EyeActionsCallbackInterface.OnFaceButton_Up;
                @FaceButton_Up.performed -= m_Wrapper.m_EyeActionsCallbackInterface.OnFaceButton_Up;
                @FaceButton_Up.canceled -= m_Wrapper.m_EyeActionsCallbackInterface.OnFaceButton_Up;
                @FaceButton_Left.started -= m_Wrapper.m_EyeActionsCallbackInterface.OnFaceButton_Left;
                @FaceButton_Left.performed -= m_Wrapper.m_EyeActionsCallbackInterface.OnFaceButton_Left;
                @FaceButton_Left.canceled -= m_Wrapper.m_EyeActionsCallbackInterface.OnFaceButton_Left;
                @FaceButton_Right.started -= m_Wrapper.m_EyeActionsCallbackInterface.OnFaceButton_Right;
                @FaceButton_Right.performed -= m_Wrapper.m_EyeActionsCallbackInterface.OnFaceButton_Right;
                @FaceButton_Right.canceled -= m_Wrapper.m_EyeActionsCallbackInterface.OnFaceButton_Right;
                @Trigger_Left.started -= m_Wrapper.m_EyeActionsCallbackInterface.OnTrigger_Left;
                @Trigger_Left.performed -= m_Wrapper.m_EyeActionsCallbackInterface.OnTrigger_Left;
                @Trigger_Left.canceled -= m_Wrapper.m_EyeActionsCallbackInterface.OnTrigger_Left;
                @Trigger_Right.started -= m_Wrapper.m_EyeActionsCallbackInterface.OnTrigger_Right;
                @Trigger_Right.performed -= m_Wrapper.m_EyeActionsCallbackInterface.OnTrigger_Right;
                @Trigger_Right.canceled -= m_Wrapper.m_EyeActionsCallbackInterface.OnTrigger_Right;
                @Shoulder_Left.started -= m_Wrapper.m_EyeActionsCallbackInterface.OnShoulder_Left;
                @Shoulder_Left.performed -= m_Wrapper.m_EyeActionsCallbackInterface.OnShoulder_Left;
                @Shoulder_Left.canceled -= m_Wrapper.m_EyeActionsCallbackInterface.OnShoulder_Left;
                @Shoulder_Right.started -= m_Wrapper.m_EyeActionsCallbackInterface.OnShoulder_Right;
                @Shoulder_Right.performed -= m_Wrapper.m_EyeActionsCallbackInterface.OnShoulder_Right;
                @Shoulder_Right.canceled -= m_Wrapper.m_EyeActionsCallbackInterface.OnShoulder_Right;
                @Dpad_Right.started -= m_Wrapper.m_EyeActionsCallbackInterface.OnDpad_Right;
                @Dpad_Right.performed -= m_Wrapper.m_EyeActionsCallbackInterface.OnDpad_Right;
                @Dpad_Right.canceled -= m_Wrapper.m_EyeActionsCallbackInterface.OnDpad_Right;
                @Dpad_Left.started -= m_Wrapper.m_EyeActionsCallbackInterface.OnDpad_Left;
                @Dpad_Left.performed -= m_Wrapper.m_EyeActionsCallbackInterface.OnDpad_Left;
                @Dpad_Left.canceled -= m_Wrapper.m_EyeActionsCallbackInterface.OnDpad_Left;
                @Dpad_Up.started -= m_Wrapper.m_EyeActionsCallbackInterface.OnDpad_Up;
                @Dpad_Up.performed -= m_Wrapper.m_EyeActionsCallbackInterface.OnDpad_Up;
                @Dpad_Up.canceled -= m_Wrapper.m_EyeActionsCallbackInterface.OnDpad_Up;
                @Dpad_Down.started -= m_Wrapper.m_EyeActionsCallbackInterface.OnDpad_Down;
                @Dpad_Down.performed -= m_Wrapper.m_EyeActionsCallbackInterface.OnDpad_Down;
                @Dpad_Down.canceled -= m_Wrapper.m_EyeActionsCallbackInterface.OnDpad_Down;
                @LeftStick_X.started -= m_Wrapper.m_EyeActionsCallbackInterface.OnLeftStick_X;
                @LeftStick_X.performed -= m_Wrapper.m_EyeActionsCallbackInterface.OnLeftStick_X;
                @LeftStick_X.canceled -= m_Wrapper.m_EyeActionsCallbackInterface.OnLeftStick_X;
                @LeftStick_Y.started -= m_Wrapper.m_EyeActionsCallbackInterface.OnLeftStick_Y;
                @LeftStick_Y.performed -= m_Wrapper.m_EyeActionsCallbackInterface.OnLeftStick_Y;
                @LeftStick_Y.canceled -= m_Wrapper.m_EyeActionsCallbackInterface.OnLeftStick_Y;
                @RightStick_X.started -= m_Wrapper.m_EyeActionsCallbackInterface.OnRightStick_X;
                @RightStick_X.performed -= m_Wrapper.m_EyeActionsCallbackInterface.OnRightStick_X;
                @RightStick_X.canceled -= m_Wrapper.m_EyeActionsCallbackInterface.OnRightStick_X;
                @RightStick_Y.started -= m_Wrapper.m_EyeActionsCallbackInterface.OnRightStick_Y;
                @RightStick_Y.performed -= m_Wrapper.m_EyeActionsCallbackInterface.OnRightStick_Y;
                @RightStick_Y.canceled -= m_Wrapper.m_EyeActionsCallbackInterface.OnRightStick_Y;
            }
            m_Wrapper.m_EyeActionsCallbackInterface = instance;
            if (instance != null)
            {
                @FaceButton_Down.started += instance.OnFaceButton_Down;
                @FaceButton_Down.performed += instance.OnFaceButton_Down;
                @FaceButton_Down.canceled += instance.OnFaceButton_Down;
                @FaceButton_Up.started += instance.OnFaceButton_Up;
                @FaceButton_Up.performed += instance.OnFaceButton_Up;
                @FaceButton_Up.canceled += instance.OnFaceButton_Up;
                @FaceButton_Left.started += instance.OnFaceButton_Left;
                @FaceButton_Left.performed += instance.OnFaceButton_Left;
                @FaceButton_Left.canceled += instance.OnFaceButton_Left;
                @FaceButton_Right.started += instance.OnFaceButton_Right;
                @FaceButton_Right.performed += instance.OnFaceButton_Right;
                @FaceButton_Right.canceled += instance.OnFaceButton_Right;
                @Trigger_Left.started += instance.OnTrigger_Left;
                @Trigger_Left.performed += instance.OnTrigger_Left;
                @Trigger_Left.canceled += instance.OnTrigger_Left;
                @Trigger_Right.started += instance.OnTrigger_Right;
                @Trigger_Right.performed += instance.OnTrigger_Right;
                @Trigger_Right.canceled += instance.OnTrigger_Right;
                @Shoulder_Left.started += instance.OnShoulder_Left;
                @Shoulder_Left.performed += instance.OnShoulder_Left;
                @Shoulder_Left.canceled += instance.OnShoulder_Left;
                @Shoulder_Right.started += instance.OnShoulder_Right;
                @Shoulder_Right.performed += instance.OnShoulder_Right;
                @Shoulder_Right.canceled += instance.OnShoulder_Right;
                @Dpad_Right.started += instance.OnDpad_Right;
                @Dpad_Right.performed += instance.OnDpad_Right;
                @Dpad_Right.canceled += instance.OnDpad_Right;
                @Dpad_Left.started += instance.OnDpad_Left;
                @Dpad_Left.performed += instance.OnDpad_Left;
                @Dpad_Left.canceled += instance.OnDpad_Left;
                @Dpad_Up.started += instance.OnDpad_Up;
                @Dpad_Up.performed += instance.OnDpad_Up;
                @Dpad_Up.canceled += instance.OnDpad_Up;
                @Dpad_Down.started += instance.OnDpad_Down;
                @Dpad_Down.performed += instance.OnDpad_Down;
                @Dpad_Down.canceled += instance.OnDpad_Down;
                @LeftStick_X.started += instance.OnLeftStick_X;
                @LeftStick_X.performed += instance.OnLeftStick_X;
                @LeftStick_X.canceled += instance.OnLeftStick_X;
                @LeftStick_Y.started += instance.OnLeftStick_Y;
                @LeftStick_Y.performed += instance.OnLeftStick_Y;
                @LeftStick_Y.canceled += instance.OnLeftStick_Y;
                @RightStick_X.started += instance.OnRightStick_X;
                @RightStick_X.performed += instance.OnRightStick_X;
                @RightStick_X.canceled += instance.OnRightStick_X;
                @RightStick_Y.started += instance.OnRightStick_Y;
                @RightStick_Y.performed += instance.OnRightStick_Y;
                @RightStick_Y.canceled += instance.OnRightStick_Y;
            }
        }
    }
    public EyeActions @Eye => new EyeActions(this);
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IEyeActions
    {
        void OnFaceButton_Down(InputAction.CallbackContext context);
        void OnFaceButton_Up(InputAction.CallbackContext context);
        void OnFaceButton_Left(InputAction.CallbackContext context);
        void OnFaceButton_Right(InputAction.CallbackContext context);
        void OnTrigger_Left(InputAction.CallbackContext context);
        void OnTrigger_Right(InputAction.CallbackContext context);
        void OnShoulder_Left(InputAction.CallbackContext context);
        void OnShoulder_Right(InputAction.CallbackContext context);
        void OnDpad_Right(InputAction.CallbackContext context);
        void OnDpad_Left(InputAction.CallbackContext context);
        void OnDpad_Up(InputAction.CallbackContext context);
        void OnDpad_Down(InputAction.CallbackContext context);
        void OnLeftStick_X(InputAction.CallbackContext context);
        void OnLeftStick_Y(InputAction.CallbackContext context);
        void OnRightStick_X(InputAction.CallbackContext context);
        void OnRightStick_Y(InputAction.CallbackContext context);
    }
}
